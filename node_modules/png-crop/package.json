{
  "name": "png-crop",
  "version": "0.0.0",
  "description": "Small PNG cropping utility, written in pure JS for Node.",
  "main": "index.js",
  "dependencies": {
    "pngjs": "~0.4.0",
    "streamifier": "^0.1.0"
  },
  "devDependencies": {
    "concat-stream": "^1.4.3",
    "mocha": "^1.17.1",
    "should": "^3.1.3"
  },
  "scripts": {
    "test": "mocha test/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chenglou/png-crop"
  },
  "keywords": [
    "png",
    "crop",
    "image"
  ],
  "author": {
    "name": "chenglou"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/chenglou/png-crop/issues"
  },
  "readme": "# PNG Crop\nSmall PNG crop utility, written in pure JS for Node.\n\n```bash\nnpm install png-crop\n```\n\n## Usage\n\n(_Check out the example folder._)\n\nBoth methods take a image path/stream/buffer as input, and a configuration with the keys `width`, `height` (mandatory, can be arbitrarily large) and `top` and `left` (optional).\n\n### Crop and output to file\n\n```js\nvar PNGCrop = require('png-crop');\n\n// if you don't know the image's dimension and want to crop for a point all the\n// way til bottom right, just pass a big width/height\nvar config1 = {width: 100, height: 62, top: 95, left: 110};\n// pass a path, a buffer or a stream as the input\nPNGCrop.crop('1.png', 'expectedCropTopLeftConfig.png', config1, function(err) {\n  if (err) throw err;\n  console.log('done!');\n});\n```\n\n### Crop and get the output stream\n\n```js\nvar PNGCrop = require('png-crop');\n\n// optionally pass top and left to the configurations as the upper left corner\n// from which to start cropping\nvar config2 = {width: 53, height: 114};\n\nvar imgBuffer = fs.readFileSync('1.png');\nPNGCrop.cropToStream(imgBuffer, config2, function(err, outputStream) {\n  if (err) throw err;\n  outputStream.pipe(fs.createWriteStream('expectedCrop.png'));\n});\n```\n\n## License\nMIT.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/chenglou/png-crop",
  "_id": "png-crop@0.0.0",
  "_from": "png-crop@0.0.0"
}
